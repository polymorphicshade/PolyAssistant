services:

  # automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: "watchtower"
    environment:
      - WATCHTOWER_CLEANUP=true
    networks:
      - private
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  # Ollama
  ollama:
    image: ollama/ollama
    container_name: "ollama"
    ports:
      - 11434:11434
    volumes:
      - ${DATA_DIRECTORY}/ollama:/root/.ollama
    networks:
      - private
      - public
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Open-WebUI
  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: "open-webui"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - DEFAULT_MODELS=llama3.2:instruct
      - WEBUI_NAME=AI Chat
    volumes:
      - ${DATA_DIRECTORY}/open-webui:/app/backend/data
    networks:
      - private
      - public
    depends_on:
      - ollama
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Stable Diffusion Web UI
  stable-diffusion-webui:
    build:
      context: .repos/PolyAssistant.StableDiffusionWebUi/.
      dockerfile: Dockerfile
    container_name: "stable-diffusion-webui"
    ports:
      - 17341:7860
    volumes:
      - ${DATA_DIRECTORY}/stable-diffusion-webui/outputs:/app/stable-diffusion-webui/outputs
      - ${DATA_DIRECTORY}/stable-diffusion-webui/models:/app/stable-diffusion-webui/models
      - ${DATA_DIRECTORY}/stable-diffusion-webui/extensions:/app/stable-diffusion-webui/extensions
      - ${DATA_DIRECTORY}/stable-diffusion-webui/repositories:/app/stable-diffusion-webui/repositories
      - ${DATA_DIRECTORY}/stable-diffusion-webui/cache:/root/.cache
    networks:
      - private
      - public
    command: >
      python launch.py
      --allow-code
      --listen
      --gradio-auth user:pass
      --api
      --administrator
      --disable-tls-verify
      --xformers
      --reinstall-xformers
      --theme=dark
      --no-prompt-history
      --enable-insecure-extension-access
      --subpath=stable-diffusion-webui
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, utility]

  # Zonos
  zonos:
    build:
      context: .repos/PolyAssistant.Zonos/.
      dockerfile: Dockerfile
    container_name: "zonos"
    ports:
      - 16460:7860
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - GRADIO_SHARE=False
      - GRADIO_ROOT_PATH=/zonos-ui
    volumes:
      - ${DATA_DIRECTORY}/zonos:/root/.cache
    networks:
      - private
      - public
    user: 0:0
    stdin_open: true
    tty: true
    command: ["python3", "gradio_interface.py"]
    restart: unless-stopped
    runtime: nvidia

  # Chatterbox
  chatterbox:
    build:
      context: .repos/PolyAssistant.Chatterbox/.
      dockerfile: Dockerfile
    container_name: "chatterbox"
    ports:
      - 16451:7860
      - 16452:7861
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - GRADIO_SHARE=False
      - GRADIO_ROOT_PATH=/chatterbox-ui
    networks:
      - private
      - public
    user: 0:0
    restart: unless-stopped
    runtime: nvidia

  # whisper
  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest-gpu
    container_name: "whisper"
    ports:
      - 9000:9000
    environment:
      - ASR_ENGINE=openai_whisper
      - ASR_MODEL=base
    volumes:
      - ${DATA_DIRECTORY}/whisper:/root/.cache/
    networks:
      - private
      - public
    restart: unless-stopped

  # MySQL database
  mariadb:
    image: mariadb:latest
    container_name: "mariadb"
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: main_db
    volumes:
      - ${DATA_DIRECTORY}/database:/var/lib/mysql
    networks:
      - private
    user: 0:0
    restart: unless-stopped

  # SearXNG
  searxng:
    image: docker.io/searxng/searxng:latest
    container_name: "searxng"
    ports:
      - 17511:8080
    volumes:
      - ./searxng/settings.yml:/etc/searxng/settings.yml:rw
      - ${DATA_DIRECTORY}/searxng:/etc/searxng:rw
    networks:
      - public
      - private
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
    user: 0:0
    restart: unless-stopped

  # Crawl4Ai
  crawl4ai:
    image: unclecode/crawl4ai:latest
    container_name: "crawl4ai"
    ports:
      - 11235:11235 # http://<ip>:11235/playground/
    networks:
      - public
      - private
    restart: unless-stopped

  # FramePack-Studio
  framepack-studio:
    build:
      context: .repos/PolyAssistant.FramePack-Studio/.
      dockerfile: Dockerfile
    container_name: "framepack-studio"
    ports:
      - 10559:7860
    environment:
      - GRADIO_ROOT_PATH=/framepack-studio
      - NVIDIA_VISIBLE_DEVICES=0
    volumes:
      - ${DATA_DIRECTORY}/framepack-studio/input:/app/input_files
      - ${DATA_DIRECTORY}/framepack-studio/output:/app/output
      - ${DATA_DIRECTORY}/framepack-studio/loras:/app/loras
      - ${DATA_DIRECTORY}/framepack-studio/toolbox:/app/modules/toolbox/bin
      - ${DATA_DIRECTORY}/framepack-studio/hf_download:/app/hf_download
    networks:
      - private
      - public
    user: 0:0
    restart: unless-stopped
    runtime: nvidia

  # PolyAssistant API
  polyassistant-api:
    build:
      context: ./src
      dockerfile: PolyAssistant.Api/Dockerfile
    container_name: "polyassistant-api"
    ports:
      - 19161:8080
    environment:
      - Whisper__Url=http://whisper:9000
      - Zonos__Url=http://zonos:7861 # api
      - Chatterbox__Url=http://chatterbox:7861 # api
      - Ollama__Url=http://ollama:11434
      - Ollama__DefaultModel=llama3.2:latest
      - Ollama__DefaultSystemMessage=You are a helpful assistant. Keep your responses brief.
      - SearXng__Url=http://searxng:8080
      - Crawl4Ai__Url=http://crawl4ai:11235
      - FramePack-Studio__Url=http://framepack-studio:7860
      - Stable-Diffusion-WebUi__Url=http://stable-diffusion-webui:7860
      - Caching__DatabaseType=MySql
      - Caching__ConnectionString=Server=mariadb;Port=3306;Database=polyassistant-api;Uid=root;Pwd=pass123;
    volumes:
      - ${DATA_DIRECTORY}/uploads:/app/uploads
    networks:
      - private
      - public
    depends_on:
      whisper:
        condition: service_started
      zonos:
        condition: service_started
      chatterbox:
        condition: service_started
      ollama:
        condition: service_started
      searxng:
        condition: service_started
      mariadb:
        condition: service_started
      crawl4ai:
        condition: service_started
      framepack-studio:
        condition: service_started
      open-webui:
        condition: service_started
      stable-diffusion-webui:
        condition: service_started
    user: 0:0
    restart: unless-stopped

  # Nginx Proxy for HTTPS
  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
      - 443:443
    environment:
      - POLYASSISTANT_API_ROUTE_NAME=polyassistant-api
      - POLYASSISTANT_API_URL=http://polyassistant-api:8080/
      - OLLAMA_ROUTE_NAME=ollama-api
      - OLLAMA_URL=http://ollama:11434/
      - OPEN_WEBUI_URL=http://open-webui:8080/
      - WHISPER_ROUTE_NAME=whisper
      - WHISPER_URL=http://whisper:9000/
      - ZONOS_UI_ROUTE_NAME=zonos-ui
      - ZONOS_UI_URL=http://zonos:7860/ # ui
      - ZONOS_API_ROUTE_NAME=zonos-api
      - ZONOS_API_URL=http://zonos:7861/ # api
      - CHATTERBOX_UI_ROUTE_NAME=chatterbox-ui
      - CHATTERBOX_UI_URL=http://chatterbox:7860/ # ui
      - CHATTERBOX_API_ROUTE_NAME=chatterbox-api
      - CHATTERBOX_API_URL=http://chatterbox:7861/ # api
      - SEARXNG_ROUTE_NAME=searxng
      - SEARXNG_URL=http://searxng:8080/
      - CRAWL4AI_ROUTE_NAME=crawl4ai
      - CRAWL4AI_URL=http://crawl4ai:11235/
      - FRAMEPACK_ROUTE_NAME=framepack-studio
      - FRAMEPACK_URL=http://framepack-studio:7860/
      - STABLE_DIFFUSION_WEBUI_ROUTE_NAME=stable-diffusion-webui
      - STABLE_DIFFUSION_WEBUI_URL=http://stable-diffusion-webui:7860/
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - private
      - public
    depends_on:
      polyassistant-api:
        condition: service_started
      ollama:
        condition: service_started
      whisper:
        condition: service_started
      zonos:
        condition: service_started
      chatterbox:
        condition: service_started
      searxng:
        condition: service_started
      crawl4ai:
        condition: service_started
      framepack-studio:
        condition: service_started
      open-webui:
        condition: service_started
      stable-diffusion-webui:
        condition: service_started
    user: 0:0
    restart: unless-stopped

networks:
  public:
    driver: bridge
  private:
    internal: true