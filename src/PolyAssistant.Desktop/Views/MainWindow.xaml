<Window x:Class="PolyAssistant.Desktop.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:models="clr-namespace:PolyAssistant.Desktop.Models"
        xmlns:viewModels="clr-namespace:PolyAssistant.Desktop.ViewModels"
        xmlns:local="clr-namespace:PolyAssistant.Desktop"
        xmlns:converters="clr-namespace:PolyAssistant.Desktop.Converters"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        Width="800"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel, d:IsDesignTimeCreatable=True}">
    <Window.Resources>
        <converters:EnumToBoolConverter x:Key="EnumToBoolConverter" />
    </Window.Resources>
    <Grid>
        <!-- system tray icon -->
        <tb:TaskbarIcon IconSource="/icon.ico"
                        ToolTipService.InitialShowDelay="0"
                        ToolTipService.Placement="Top">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu x:Name="TrayMenu">
                    <!-- mode -->
                    <MenuItem Header="Mode">
                        <MenuItem Header="Chat"
                                  IsChecked="{Binding SelectedMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Mode.Chat}}"
                                  IsCheckable="True"
                                  StaysOpenOnClick="True" />
                        <MenuItem Header="Command"
                                  IsChecked="{Binding SelectedMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Mode.Command}}"
                                  IsCheckable="True"
                                  StaysOpenOnClick="True" />
                    </MenuItem>
                    <Separator />
                    <!-- agents -->
                    <MenuItem Header="Agents"
                              ItemsSource="{Binding Agents}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <!-- check state is read-only -->
                                <Setter Property="IsCheckable"
                                        Value="False" />
                                <Setter Property="IsChecked"
                                        Value="{Binding IsSelected, Mode=OneWay}" />
                                <Setter Property="StaysOpenOnClick"
                                        Value="True" />
                                <!-- when clicked, the IsSelected property will be handled by the ViewModel -->
                                <EventSetter Event="PreviewMouseLeftButtonUp"
                                             Handler="OnTrayAgentMouseLeftButtonUp" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:AgentModel}">
                                <TextBlock Text="{Binding Agent.Name}" />
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <Separator />
                    <!-- devices -->
                    <MenuItem Header="Devices">
                        <!-- input -->
                        <MenuItem Header="Input"
                                  ItemsSource="{Binding InputDevices}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <!-- check state is read-only -->
                                    <Setter Property="IsCheckable"
                                            Value="False" />
                                    <Setter Property="IsChecked"
                                            Value="{Binding IsSelected, Mode=OneWay}" />
                                    <Setter Property="StaysOpenOnClick"
                                            Value="True" />
                                    <!-- when clicked, the IsSelected property will be handled by the ViewModel -->
                                    <EventSetter Event="PreviewMouseLeftButtonUp"
                                                 Handler="OnTrayInputDeviceMouseLeftButtonUp" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                            <MenuItem.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:AudioInputDeviceModel}">
                                    <TextBlock Text="{Binding Device.Name}" />
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <!-- output -->
                        <MenuItem Header="Output"
                                  ItemsSource="{Binding OutputDevices}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <!-- check state is read-only -->
                                    <Setter Property="IsCheckable"
                                            Value="False" />
                                    <Setter Property="IsChecked"
                                            Value="{Binding IsSelected, Mode=OneWay}" />
                                    <Setter Property="StaysOpenOnClick"
                                            Value="True" />
                                    <!-- when clicked, the IsSelected property will be handled by the ViewModel -->
                                    <EventSetter Event="PreviewMouseLeftButtonUp"
                                                 Handler="OnTrayOutputDeviceMouseLeftButtonUp" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                            <MenuItem.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:AudioOutputDeviceModel}">
                                    <TextBlock Text="{Binding Device.Name}" />
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                    </MenuItem>
                    <Separator />
                    <!-- exit -->
                    <MenuItem Header="Exit"
                              Click="OnTrayMenuExitClick" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <!-- content -->
        <Grid>
            <!-- TODO: fill in -->
            <TextBlock Text="- TODO: fill in -"
                       FontStyle="Italic"
                       FontSize="18"
                       Opacity="0.3"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
        </Grid>
    </Grid>
</Window>